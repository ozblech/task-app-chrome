{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/oz/Desktop/git/task-app-front/src/components/VoiceRecognition/VoiceRecognition.js\";\nimport React, { Component } from 'react';\nconst speechRecognition = window.speechRecognition || window.webkitSpeechRecognition;\nconst recognition = new speechRecognition();\nrecognition.continous = true;\nrecognition.lang = 'en-US';\nrecognition.start();\n\nclass VoiceRecognition extends Component {\n  constructor() {\n    super();\n\n    this.toggleListen = () => {\n      this.setState({\n        listening: !this.state.listening\n      }, this.handleListen);\n    };\n\n    this.handleListen = () => {\n      if (this.state.listening) recognition.start();\n      let finalTranscript = '';\n\n      recognition.onresult = event => {\n        let interimTranscript = '';\n        console.log(event.result);\n\n        for (let i = event.resultIndex; i < event.result.length; i++) {\n          const transcript = event.results[i][0].transcript;\n          if (event.result[i].isFinal) finalTranscript += transcript + \"\";else interimTranscript += transcript;\n        }\n\n        document.getElementById('interim').innerHTML = interimTranscript;\n        document.getElementById('final').innerHTML = finalTranscript;\n      };\n    };\n\n    this.state = {\n      count: 0,\n      setCount: 0,\n      listening: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"microphone-btn\",\n      style: button,\n      onClick: this.toggleListen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"interim\",\n      style: final,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"final\",\n      style: final,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}\n\nexport default VoiceRecognition;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  button: {\n    width: '60px',\n    height: '60px',\n    background: 'lightblue',\n    borderRadius: '50%',\n    margin: '6em 0 2em 0'\n  },\n  interim: {\n    color: 'gray',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  },\n  final: {\n    color: 'black',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  }\n};\nconst {\n  container,\n  button,\n  interim,\n  final\n} = styles;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/VoiceRecognition/VoiceRecognition.js"],"names":["React","Component","speechRecognition","window","webkitSpeechRecognition","recognition","continous","lang","start","VoiceRecognition","constructor","toggleListen","setState","listening","state","handleListen","finalTranscript","onresult","event","interimTranscript","console","log","result","i","resultIndex","length","transcript","results","isFinal","document","getElementById","innerHTML","count","setCount","render","container","button","final","styles","display","flexDirection","alignItems","textAlign","width","height","background","borderRadius","margin","interim","color","border","padding"],"mappings":"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","sourcesContent":["'use strict'\n\n\nimport React, { Component } from 'react'\n\n\nconst speechRecognition = window.speechRecognition || window.webkitSpeechRecognition;\n\nconst recognition = new speechRecognition();\n\nrecognition.continous = true\nrecognition.lang = 'en-US'\nrecognition.start()\n\nclass VoiceRecognition extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcount: 0,\n\t\t\tsetCount: 0,\n\t\t\tlistening: false\n\t\t}\t\n\t}\n\t\n\ttoggleListen = () => {\n\t\tthis.setState({listening: !this.state.listening}, this.handleListen)\n\t}\n\n\thandleListen = () => {\n\t\tif(this.state.listening) recognition.start()\n\n\t\tlet finalTranscript =''\n\t\trecognition.onresult = event => {\n\t\t\tlet interimTranscript =''\n\t\t\tconsole.log(event.result)\n\t\t\tfor (let i = event.resultIndex; i < event.result.length; i++)\n\t\t\t{\n\t\t\t\tconst transcript = event.results[i][0].transcript\n\t\t\t\tif(event.result[i].isFinal) finalTranscript +=transcript + \"\";\n\t\t\t\telse interimTranscript +=transcript;\n\t\t\t}\n\n\t\t\tdocument.getElementById('interim').innerHTML = interimTranscript\n\t\t\tdocument.getElementById('final').innerHTML = finalTranscript\n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={container}>\n\t\t\t\t<button id = 'microphone-btn' style ={button} onClick={this.toggleListen} />\n\t\t\t\t<div id = 'interim' style={final}></div>\n\t\t\t\t <div id='final' style={final}></div>\n     \t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default VoiceRecognition;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  button: {\n    width: '60px',\n    height: '60px',\n    background: 'lightblue',\n    borderRadius: '50%',\n    margin: '6em 0 2em 0'\n  },\n  interim: {\n    color: 'gray',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  },\n  final: {\n    color: 'black',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  }\n}\n\nconst { container, button, interim, final } = styles"]},"metadata":{},"sourceType":"module"}