{"ast":null,"code":"import _classCallCheck from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Task from'../Task/Task';import AddTaskForm from'../AddTaskForm/AddTaskForm';import EditTaskForm from'../EditTaskForm/EditTaskForm';import addImg from'./Add.png';var Tasks=/*#__PURE__*/function(_React$Component){_inherits(Tasks,_React$Component);var _super=_createSuper(Tasks);function Tasks(props){var _this;_classCallCheck(this,Tasks);_this=_super.call(this,props);_this.getUserTasks=function(){var user=_this.state.user;fetch('https://blech-task-manager.herokuapp.com/tasks',{method:'get',headers:{'content-type':'application/json',Authorization:\"Bearer \".concat(user.token)}}).then(function(response){return response.json();}).then(function(jsonResponse){console.log(jsonResponse);if(jsonResponse.length>0){_this.setState({tasks:jsonResponse,editTaskPage:false});}});};_this.changeAddTaskButtonState=function(trueOrFalse){trueOrFalse?_this.setState({addNewTaskButton:true}):_this.setState({addNewTaskButton:false});};_this.editTask=function(_id,description){console.log('task id is: ',_id);_this.setState({taskToEditId:_id,editTaskPage:true,editingTaskDesc:description});};_this.displayAddTaskButton=function(){var _this$state=_this.state,tasks=_this$state.tasks,addNewTaskButton=_this$state.addNewTaskButton;return addNewTaskButton?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{className:\"link grow pointer\",onClick:function onClick(){return _this.changeAddTaskButtonState(false);},alt:\"\",src:addImg,width:\"150px\",height:\"auto\"})):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddTaskForm,{changeAddTaskButtonState:_this.changeAddTaskButtonState,getUserTasks:_this.getUserTasks,user:_this.state.user}));};_this.displayAllTasks=function(){var _this$state2=_this.state,tasks=_this$state2.tasks,addNewTaskButton=_this$state2.addNewTaskButton;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Tasks\"),tasks.map(function(task,i){return/*#__PURE__*/React.createElement(Task,{key:i,_id:tasks[i]._id,description:tasks[i].description,completed:tasks[i].completed,editTask:_this.editTask});}));};_this.state={user:props.user,tasks:[],addNewTaskButton:true,editTaskPage:false,taskToEditId:'',editingTaskDesc:''};return _this;}_createClass(Tasks,[{key:\"componentDidMount\",value:function componentDidMount(){this.getUserTasks();}},{key:\"render\",value:function render(){var _this$state3=this.state,user=_this$state3.user,taskToEditId=_this$state3.taskToEditId,getUserTasks=_this$state3.getUserTasks,editTaskPage=_this$state3.editTaskPage,editingTaskDesc=_this$state3.editingTaskDesc;return/*#__PURE__*/React.createElement(\"div\",null,!editTaskPage?(this.displayAddTaskButton(),this.displayAllTasks()):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(EditTaskForm,{user:user,taskToEditId:taskToEditId,editingTaskDesc:editingTaskDesc,getUserTasks:this.getUserTasks})));}}]);return Tasks;}(React.Component);export default Tasks;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js"],"names":["React","Task","AddTaskForm","EditTaskForm","addImg","Tasks","props","getUserTasks","user","state","fetch","method","headers","Authorization","token","then","response","json","jsonResponse","console","log","length","setState","tasks","editTaskPage","changeAddTaskButtonState","trueOrFalse","addNewTaskButton","editTask","_id","description","taskToEditId","editingTaskDesc","displayAddTaskButton","displayAllTasks","map","task","i","completed","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport AddTaskForm from '../AddTaskForm/AddTaskForm'\nimport EditTaskForm from '../EditTaskForm/EditTaskForm'\n\n\nimport addImg from './Add.png'\n\n\nclass Tasks extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: props.user,\n\t\t\ttasks: [],\n\t\t\taddNewTaskButton: true,\n\t\t\teditTaskPage: false,\n\t\t\ttaskToEditId: '',\n\t\t\teditingTaskDesc: ''\n\t\t}\t\n\t}\n\n\tgetUserTasks = () => {\n\t\tconst user = this.state.user\n\t\tfetch('https://blech-task-manager.herokuapp.com/tasks', {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(jsonResponse => {\n\t\t\tconsole.log(jsonResponse)\n\t\t\tif(jsonResponse.length > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttasks: jsonResponse,\n\t\t\t\t\teditTaskPage: false\n\t\t\t\t})\n\t\t\t}\n\t\t})\t\n\t\t\n\t}\n\n\tchangeAddTaskButtonState = (trueOrFalse) => {\n\t\t(trueOrFalse) ?\n\t\tthis.setState({addNewTaskButton: true})\n\t\t:\n\t\tthis.setState({addNewTaskButton: false})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUserTasks()\n\t}\n\n\teditTask = (_id, description) => {\n\t\tconsole.log('task id is: ',_id)\n\t\tthis.setState({\n\t\t\ttaskToEditId: _id,\n\t\t\teditTaskPage: true,\n\t\t\teditingTaskDesc: description\n\t\t})\n\t}\n\n\tdisplayAddTaskButton = () => {\n\t\tconst { tasks, addNewTaskButton } = this.state\n\t\treturn (\n\t\t\t\t(addNewTaskButton)\n\t\t\t\t\t?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img \n\t\t\t\t\t\tclassName='link grow pointer' \n\t\t\t\t\t\tonClick={() => this.changeAddTaskButtonState(false)}\n\t\t\t\t\t\talt='' src = {addImg} width='150px' height='auto'/>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<AddTaskForm \n\t\t\t\t\t\tchangeAddTaskButtonState = {this.changeAddTaskButtonState}\n\t\t\t\t\t\tgetUserTasks = {this.getUserTasks}\n\t\t\t\t\t\tuser = {this.state.user}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t)\n\t}\n\n\tdisplayAllTasks = () => {\n\t\tconst { tasks, addNewTaskButton } = this.state\n\t\treturn (\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<h1>Tasks</h1>\n\t  \t\t\t{\n\t  \t\t\t\ttasks.map((task, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Task \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t_id={tasks[i]._id} \n\t\t\t\t\t\t\tdescription={tasks[i].description} \n\t\t\t\t\t\t\tcompleted={tasks[i].completed}\n\t\t\t\t\t\t\teditTask = {this.editTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\n\t  \t\t\t}\t\t  \t\t\t\n\t  \t\t</div>\n\t\t)\n\n\t}\n\n\trender() {\n\t\tconst { user, taskToEditId, getUserTasks, editTaskPage, editingTaskDesc } = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\t(!editTaskPage) \n\t\t\t\t\t?\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.displayAddTaskButton(),\n\t\t\t\t\t\tthis.displayAllTasks()\n\t\t\t\t\t)\n\t\t\t\t\t:\n\t\t\t\t\t(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<EditTaskForm \n\t\t\t\t\t\tuser={user} \n\t\t\t\t\t\ttaskToEditId={taskToEditId} \n\t\t\t\t\t\teditingTaskDesc = {editingTaskDesc}\n\t\t\t\t\t\tgetUserTasks = {this.getUserTasks}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t  \t</div>\n\t\t)\n\t}\t\n\t\n}\n\nexport default Tasks;\n\n\n"]},"metadata":{},"sourceType":"module"}