{"ast":null,"code":"var _jsxFileName = \"/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js\";\nimport React from 'react';\nimport Task from '../Task/Task';\nimport EditTaskForm from '../EditTaskForm/EditTaskForm';\nimport AddnewTaskButton from '../AddNewTaskButton/AddNewTaskButton';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserTasks = () => {\n      const user = this.state.user;\n      fetch('https://blech-task-manager.herokuapp.com/tasks', {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => response.json()).then(jsonResponse => {\n        console.log(jsonResponse);\n\n        if (jsonResponse.length > 0) {\n          this.setState({\n            tasks: jsonResponse,\n            editTaskPage: false\n          });\n        }\n      });\n    };\n\n    this.editTaskPageOff = () => {\n      this.setState({\n        editTaskPage: false\n      });\n    };\n\n    this.changeAddTaskButtonState = trueOrFalse => {\n      trueOrFalse ? this.setState({\n        addNewTaskButton: true\n      }) : this.setState({\n        addNewTaskButton: false\n      });\n    };\n\n    this.editTask = (_id, description) => {\n      console.log('task id is: ', _id);\n      this.setState({\n        taskToEditId: _id,\n        editTaskPage: true,\n        editingTaskDesc: description\n      });\n    };\n\n    this.displayAllTasks = () => {\n      const {\n        tasks\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }\n      }, \"Tasks\"), tasks.map((task, i) => {\n        return /*#__PURE__*/React.createElement(Task, {\n          key: i,\n          _id: tasks[i]._id,\n          description: tasks[i].description,\n          completed: tasks[i].completed,\n          editTask: this.editTask,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 8\n          }\n        });\n      }));\n    };\n\n    this.state = {\n      user: props.user,\n      tasks: [],\n      addNewTaskButton: true,\n      editTaskPage: false,\n      taskToEditId: '',\n      editingTaskDesc: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getUserTasks();\n  }\n\n  render() {\n    const {\n      user,\n      taskToEditId,\n      editTaskPage,\n      editingTaskDesc\n    } = this.state;\n    console.log('edit task page not: ', !editTaskPage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(AddnewTaskButton, {\n      addNewTaskButton: this.state.addNewTaskButton,\n      changeAddTaskButtonState: this.changeAddTaskButtonState,\n      user: user,\n      getUserTasks: this.getUserTasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }), editTaskPage ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(EditTaskForm, {\n      user: user,\n      taskToEditId: taskToEditId,\n      editingTaskDesc: editingTaskDesc,\n      getUserTasks: this.getUserTasks,\n      editTaskPageOff: this.editTaskPageOff,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    })) : this.displayAllTasks());\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js"],"names":["React","Task","EditTaskForm","AddnewTaskButton","Tasks","Component","constructor","props","getUserTasks","user","state","fetch","method","headers","Authorization","token","then","response","json","jsonResponse","console","log","length","setState","tasks","editTaskPage","editTaskPageOff","changeAddTaskButtonState","trueOrFalse","addNewTaskButton","editTask","_id","description","taskToEditId","editingTaskDesc","displayAllTasks","map","task","i","completed","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport EditTaskForm from '../EditTaskForm/EditTaskForm'\nimport AddnewTaskButton from '../AddNewTaskButton/AddNewTaskButton'\n\n\n\n\nclass Tasks extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: props.user,\n\t\t\ttasks: [],\n\t\t\taddNewTaskButton: true,\n\t\t\teditTaskPage: false,\n\t\t\ttaskToEditId: '',\n\t\t\teditingTaskDesc: ''\n\t\t}\t\n\t}\n\n\tgetUserTasks = () => {\n\t\tconst user = this.state.user\n\t\tfetch('https://blech-task-manager.herokuapp.com/tasks', {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(jsonResponse => {\n\t\t\tconsole.log(jsonResponse)\n\t\t\tif(jsonResponse.length > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttasks: jsonResponse,\n\t\t\t\t\teditTaskPage: false\n\t\t\t\t})\n\t\t\t}\n\t\t})\t\t\n\t}\n\n\teditTaskPageOff = () => {\n\t\tthis.setState({\n\t\t\teditTaskPage: false\n\t\t})\n\t}\n\n\tchangeAddTaskButtonState = (trueOrFalse) => {\n\t\t(trueOrFalse) ?\n\t\tthis.setState({addNewTaskButton: true})\n\t\t:\n\t\tthis.setState({addNewTaskButton: false})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUserTasks()\n\t}\n\n\teditTask = (_id, description) => {\n\t\tconsole.log('task id is: ',_id)\n\t\tthis.setState({\n\t\t\ttaskToEditId: _id,\n\t\t\teditTaskPage: true,\n\t\t\teditingTaskDesc: description\n\t\t})\n\t}\n\n\tdisplayAllTasks = () => {\n\t\tconst {tasks} = this.state \n\t\treturn (\t\n\t\t\t<div>\n\t\t\t\t<h1>Tasks</h1>\n\t  \t\t\t{\n\t  \t\t\t\ttasks.map((task, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Task \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t_id={tasks[i]._id} \n\t\t\t\t\t\t\tdescription={tasks[i].description} \n\t\t\t\t\t\t\tcompleted={tasks[i].completed}\n\t\t\t\t\t\t\teditTask = {this.editTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\n\t  \t\t\t}\t\t  \t\t\t\n\t  \t\t</div>\n\t\t)\n\n\t}\n\n\trender() {\n\t\tconst { user, taskToEditId, editTaskPage, editingTaskDesc } = this.state\n\t\tconsole.log('edit task page not: ', !editTaskPage)\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<AddnewTaskButton \n\t\t\t\taddNewTaskButton={this.state.addNewTaskButton}\n\t\t\t\tchangeAddTaskButtonState = {this.changeAddTaskButtonState}\n\t\t\t\tuser = {user}\n\t\t\t\tgetUserTasks= {this.getUserTasks}\n\t\t\t\t/>\n\t\t\t\t{(editTaskPage)\n\t\t\t\t\t?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<EditTaskForm \n\t\t\t\t\t\tuser={user} \n\t\t\t\t\t\ttaskToEditId={taskToEditId} \n\t\t\t\t\t\teditingTaskDesc = {editingTaskDesc}\n\t\t\t\t\t\tgetUserTasks = {this.getUserTasks}\n\t\t\t\t\t\teditTaskPageOff = {this.editTaskPageOff}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\tthis.displayAllTasks()\n\t\t\t\t}\n\t\t\t</div>\t\n\t\t);\n\t}\n\t\t\n}\n\nexport default Tasks;\n\n\n"]},"metadata":{},"sourceType":"module"}