{"ast":null,"code":"import _classCallCheck from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Task from'../Task/Task';import AddTaskForm from'../AddTaskForm/AddTaskForm';import addImg from'./Add.png';var Tasks=/*#__PURE__*/function(_React$Component){_inherits(Tasks,_React$Component);var _super=_createSuper(Tasks);function Tasks(props){var _this;_classCallCheck(this,Tasks);_this=_super.call(this,props);_this.getUserTasks=function(){var user=_this.state.user;fetch('https://blech-task-manager.herokuapp.com/tasks',{method:'get',headers:{'content-type':'application/json',Authorization:\"Bearer \".concat(user.token)}}).then(function(response){return response.json();}).then(function(jsonResponse){console.log(jsonResponse);if(jsonResponse.length>0){_this.setState({tasks:jsonResponse});}});};_this.changeAddTaskButtonState=function(trueOrFalse){trueOrFalse?_this.setState({addNewTaskButton:true}):_this.setState({addNewTaskButton:false});};_this.state={user:props.user,tasks:[],addNewTaskButton:true};return _this;}_createClass(Tasks,[{key:\"componentDidMount\",value:function componentDidMount(){this.getUserTasks();}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,tasks=_this$state.tasks,addNewTaskButton=_this$state.addNewTaskButton;console.log('render ',addNewTaskButton);return/*#__PURE__*/React.createElement(\"div\",null,addNewTaskButton?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{className:\"link grow pointer\",onClick:function onClick(){return _this2.changeAddTaskButtonState(false);},alt:\"\",src:addImg,width:\"150px\",height:\"auto\"})):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddTaskForm,{changeAddTaskButtonState:this.changeAddTaskButtonState,getUserTasks:this.getUserTasks,user:this.state.user})),/*#__PURE__*/React.createElement(\"h1\",null,\"Tasks\"),/*#__PURE__*/React.createElement(\"div\",null,tasks.map(function(task,i){return/*#__PURE__*/React.createElement(Task,{key:i// id={tasks[i]._id} \n,description:tasks[i].description,completed:tasks[i].completed});})));}}]);return Tasks;}(React.Component);export default Tasks;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js"],"names":["React","Task","AddTaskForm","addImg","Tasks","props","getUserTasks","user","state","fetch","method","headers","Authorization","token","then","response","json","jsonResponse","console","log","length","setState","tasks","changeAddTaskButtonState","trueOrFalse","addNewTaskButton","map","task","i","description","completed","Component"],"mappings":"wlBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,C,GAGMC,CAAAA,K,0GAEL,eAAYC,KAAZ,CAAmB,uCAClB,uBAAMA,KAAN,EADkB,MASnBC,YATmB,CASL,UAAM,CACnB,GAAMC,CAAAA,IAAI,CAAG,MAAKC,KAAL,CAAWD,IAAxB,CACAE,KAAK,CAAC,gDAAD,CAAmD,CACvDC,MAAM,CAAE,KAD+C,CAEvDC,OAAO,CAAE,CACR,eAAgB,kBADR,CAERC,aAAa,kBAAYL,IAAI,CAACM,KAAjB,CAFL,CAF8C,CAAnD,CAAL,CAQCC,IARD,CAQM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EARd,EASCF,IATD,CASM,SAAAG,YAAY,CAAI,CACrBC,OAAO,CAACC,GAAR,CAAYF,YAAZ,EACA,GAAGA,YAAY,CAACG,MAAb,CAAsB,CAAzB,CAA4B,CAC3B,MAAKC,QAAL,CAAc,CAACC,KAAK,CAAEL,YAAR,CAAd,EACA,CACD,CAdD,EAgBA,CA3BkB,OA6BnBM,wBA7BmB,CA6BQ,SAACC,WAAD,CAAiB,CAC1CA,WAAD,CACA,MAAKH,QAAL,CAAc,CAACI,gBAAgB,CAAE,IAAnB,CAAd,CADA,CAGA,MAAKJ,QAAL,CAAc,CAACI,gBAAgB,CAAE,KAAnB,CAAd,CAHA,CAIA,CAlCkB,CAElB,MAAKjB,KAAL,CAAa,CACZD,IAAI,CAAEF,KAAK,CAACE,IADA,CAEZe,KAAK,CAAE,EAFK,CAGZG,gBAAgB,CAAE,IAHN,CAAb,CAFkB,aAOlB,C,+EA6BmB,CACnB,KAAKnB,YAAL,GACA,C,uCAIQ,iCAC4B,KAAKE,KADjC,CACAc,KADA,aACAA,KADA,CACOG,gBADP,aACOA,gBADP,CAERP,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBM,gBAAvB,EAEA,mBACC,+BAEGA,gBAAD,cAEA,4CACC,2BACA,SAAS,CAAC,mBADV,CAEA,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACF,wBAAL,CAA8B,KAA9B,CAAN,EAFT,CAGA,GAAG,CAAC,EAHJ,CAGO,GAAG,CAAIpB,MAHd,CAGsB,KAAK,CAAC,OAH5B,CAGoC,MAAM,CAAC,MAH3C,EADD,CAFA,cASA,4CACC,oBAAC,WAAD,EACA,wBAAwB,CAAI,KAAKoB,wBADjC,CAEA,YAAY,CAAI,KAAKjB,YAFrB,CAGA,IAAI,CAAI,KAAKE,KAAL,CAAWD,IAHnB,EADD,CAXF,cAoBC,sCApBD,cAqBC,+BAEIe,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACxB,mBACC,oBAAC,IAAD,EACA,GAAG,CAAEA,CACL;AAFA,CAGA,WAAW,CAAEN,KAAK,CAACM,CAAD,CAAL,CAASC,WAHtB,CAIA,SAAS,CAAEP,KAAK,CAACM,CAAD,CAAL,CAASE,SAJpB,EADD,CAQA,CATC,CAFJ,CArBD,CADD,CAwCA,C,mBAxFkB9B,KAAK,CAAC+B,S,EA4F1B,cAAe3B,CAAAA,KAAf","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport AddTaskForm from '../AddTaskForm/AddTaskForm'\n\nimport addImg from './Add.png'\n\n\nclass Tasks extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: props.user,\n\t\t\ttasks: [],\n\t\t\taddNewTaskButton: true\n\t\t}\t\n\t}\n\n\tgetUserTasks= () => {\n\t\tconst user = this.state.user\n\t\tfetch('https://blech-task-manager.herokuapp.com/tasks', {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(jsonResponse => {\n\t\t\tconsole.log(jsonResponse)\n\t\t\tif(jsonResponse.length > 0) {\n\t\t\t\tthis.setState({tasks: jsonResponse})\n\t\t\t}\n\t\t})\t\n\t\t\n\t}\n\n\tchangeAddTaskButtonState = (trueOrFalse) => {\n\t\t(trueOrFalse) ?\n\t\tthis.setState({addNewTaskButton: true})\n\t\t:\n\t\tthis.setState({addNewTaskButton: false})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUserTasks()\n\t}\n\n\n\n\trender() {\n\t\tconst { tasks, addNewTaskButton } = this.state\n\t\tconsole.log('render ' ,addNewTaskButton)\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\t(addNewTaskButton)\n\t\t\t\t\t?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img \n\t\t\t\t\t\tclassName='link grow pointer' \n\t\t\t\t\t\tonClick={() => this.changeAddTaskButtonState(false)}\n\t\t\t\t\t\talt='' src = {addImg} width='150px' height='auto'/>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<AddTaskForm \n\t\t\t\t\t\tchangeAddTaskButtonState = {this.changeAddTaskButtonState}\n\t\t\t\t\t\tgetUserTasks = {this.getUserTasks}\n\t\t\t\t\t\tuser = {this.state.user}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t}\n\t\t\t\t<h1>Tasks</h1>\n\t\t\t\t<div>\n\t\t  \t\t\t{\n\t\t  \t\t\t\ttasks.map((task, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Task \n\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t// id={tasks[i]._id} \n\t\t\t\t\t\t\t\tdescription={tasks[i].description} \n\t\t\t\t\t\t\t\tcompleted={tasks[i].completed}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\n\t\t  \t\t\t}\n\t\t  \t\t\t\n\t\t  \t\t</div>\n\t\t  \t</div>\n\t\t)\n\t}\t\n\t\n}\n\nexport default Tasks;\n\n\n"]},"metadata":{},"sourceType":"module"}