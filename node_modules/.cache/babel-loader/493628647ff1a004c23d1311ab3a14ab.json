{"ast":null,"code":"'use strict';import _classCallCheck from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import mic from'../AddTaskForm/mic.png';var SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;var recognition=new SpeechRecognition();recognition.continous=true;recognition.interimResults=true;recognition.lang='en-US';var VoiceRecognition=/*#__PURE__*/function(_Component){_inherits(VoiceRecognition,_Component);var _super=_createSuper(VoiceRecognition);function VoiceRecognition(props){var _this;_classCallCheck(this,VoiceRecognition);_this=_super.call(this,props);_this.handleListen=function(){if(_this.state.listening)recognition.start();var finalTranscript='';recognition.onresult=function(event){var interimTranscript='';for(var i=event.resultIndex;i<event.results.length;i++){var transcript=event.results[i][0].transcript;if(event.results[i].isFinal)finalTranscript+=transcript+' ';else interimTranscript+=transcript;}if(document.getElementById('description')){console.log(document.getElementById('description'));document.getElementById('description').value=finalTranscript;_this.props.updateDescriptionInput(finalTranscript);}else{if(finalTranscript==='no '){console.log(document.getElementById('cancelEditTask'));document.getElementById('cancelEditTask').click();}if(finalTranscript==='yes '){document.getElementById('submitEditTask').click();}}};};_this.state={listening:false};_this.toggleListen=_this.toggleListen.bind(_assertThisInitialized(_this));_this.handleListen=_this.handleListen.bind(_assertThisInitialized(_this));return _this;}_createClass(VoiceRecognition,[{key:\"toggleListen\",value:function toggleListen(){this.setState({listening:!this.state.listening},this.handleListen);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{style:container},/*#__PURE__*/React.createElement(\"img\",{id:\"microphone-btn\",className:\"pointer grow\",src:mic,width:\"50px\",onClick:this.toggleListen}));}}]);return VoiceRecognition;}(Component);export default VoiceRecognition;var styles={container:{display:'flex',flexDirection:'column',alignItems:'center',textAlign:'center'}};var container=styles.container;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/VoiceRecognition/VoiceRecognition.js"],"names":["React","Component","mic","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","VoiceRecognition","props","handleListen","state","listening","start","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","length","transcript","isFinal","document","getElementById","console","log","value","updateDescriptionInput","click","toggleListen","bind","setState","container","styles","display","flexDirection","alignItems","textAlign"],"mappings":"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","sourcesContent":["'use strict'\nimport React, { Component } from 'react'\nimport mic from '../AddTaskForm/mic.png'\n\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst recognition = new SpeechRecognition()\n\nrecognition.continous = true\nrecognition.interimResults = true\nrecognition.lang = 'en-US'\n\n\nclass VoiceRecognition extends Component {\n\tconstructor(props) {\n    super(props)\n    \tthis.state = {\n     \t listening: false\n    }\n\t    this.toggleListen = this.toggleListen.bind(this)\n\t    this.handleListen = this.handleListen.bind(this)\n  \t}\n  \n  toggleListen() {\n    this.setState({\n      listening: !this.state.listening\n    }, this.handleListen)\n  }\n\n\thandleListen = () => {\n\t\tif (this.state.listening) recognition.start()\n\n\t    let finalTranscript = ''\n\t    recognition.onresult = event => {\n\t\t    let interimTranscript = ''\n\n\t\t    for (let i = event.resultIndex; i < event.results.length; i++) {\n\t\t    \tconst transcript = event.results[i][0].transcript;\n\t\t        if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n\t\t        else interimTranscript += transcript;\n\t\t    }\n\t\t    if(document.getElementById('description')) {\n\t\t    \tconsole.log(document.getElementById('description'))\n\t\t    \tdocument.getElementById('description').value = finalTranscript\n\t\t    \tthis.props.updateDescriptionInput(finalTranscript)\n\t\t    }\n\t\t    else {\n\t\t    \tif(finalTranscript === 'no '){\n\t\t    \t\tconsole.log(document.getElementById('cancelEditTask'))\n\t\t    \t\tdocument.getElementById('cancelEditTask').click()\n\t\t    \t}\n\t\t    \tif(finalTranscript === 'yes '){\n\t\t    \t\tdocument.getElementById('submitEditTask').click()\n\t\t    \t}\n\t\t    }\n\t\t    \n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={container}>\n\t\t\t\t<img id = 'microphone-btn' \n\t\t\t\tclassName='pointer grow'\n\t\t\t\tsrc={mic} \n\t\t\t\twidth = \"50px\"\n\t\t\t\tonClick={this.toggleListen} \n\t\t\t\t/>\n     \t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default VoiceRecognition;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n\n}\n\nconst { container } = styles"]},"metadata":{},"sourceType":"module"}