{"ast":null,"code":"var _jsxFileName = \"/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js\";\nimport React from 'react';\nimport Task from '../Task/Task';\nimport EditTaskForm from '../EditTaskForm/EditTaskForm';\nimport AddnewTaskButton from '../AddNewTaskButton/AddNewTaskButton';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserTasks = () => {\n      const user = this.state.user;\n      fetch('https://blech-task-manager.herokuapp.com/tasks', {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => response.json()).then(jsonResponse => {\n        console.log(jsonResponse);\n\n        if (jsonResponse.length > 0) {\n          this.setState({\n            tasks: jsonResponse\n          });\n        }\n      });\n    };\n\n    this.editTaskPageOnOff = (editTaskPageOn, _id, description, toggleTaskComplete) => {\n      return editTaskPageOn ? this.setState({\n        editTaskPage: true,\n        addNewTaskButton: true,\n        taskToEditId: _id,\n        editingTaskDesc: description,\n        toggleTaskComplete: toggleTaskComplete,\n        taskCompletedStatus: completed\n      }) : this.setState({\n        editTaskPage: false\n      });\n    };\n\n    this.changeAddTaskButtonState = trueOrFalse => {\n      trueOrFalse ? this.setState({\n        addNewTaskButton: true\n      }) : this.setState({\n        addNewTaskButton: false\n      });\n    };\n\n    this.displayAllTasks = () => {\n      const {\n        tasks\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }\n      }, \"Tasks\"), tasks.map((task, i) => {\n        return /*#__PURE__*/React.createElement(Task, {\n          key: i,\n          _id: tasks[i]._id,\n          description: tasks[i].description,\n          completed: tasks[i].completed,\n          editTaskPageOnOff: this.editTaskPageOnOff,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 8\n          }\n        });\n      }));\n    };\n\n    this.state = {\n      user: props.user,\n      tasks: [],\n      addNewTaskButton: true,\n      editTaskPage: false,\n      taskToEditId: '',\n      editingTaskDesc: '',\n      toggleTaskComplete: false,\n      taskCompletedStatus: false\n    };\n  }\n\n  componentDidMount() {\n    this.getUserTasks();\n  }\n\n  render() {\n    const {\n      user,\n      taskToEditId,\n      editTaskPage,\n      editingTaskDesc,\n      toggleTaskComplete\n    } = this.state;\n    console.log('edit task page not: ', !editTaskPage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(AddnewTaskButton, {\n      addNewTaskButton: this.state.addNewTaskButton,\n      changeAddTaskButtonState: this.changeAddTaskButtonState,\n      user: user,\n      getUserTasks: this.getUserTasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }), editTaskPage ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(EditTaskForm, {\n      user: user,\n      taskToEditId: taskToEditId,\n      editingTaskDesc: editingTaskDesc,\n      getUserTasks: this.getUserTasks,\n      toggleTaskComplete: toggleTaskComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    })) : this.displayAllTasks());\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js"],"names":["React","Task","EditTaskForm","AddnewTaskButton","Tasks","Component","constructor","props","getUserTasks","user","state","fetch","method","headers","Authorization","token","then","response","json","jsonResponse","console","log","length","setState","tasks","editTaskPageOnOff","editTaskPageOn","_id","description","toggleTaskComplete","editTaskPage","addNewTaskButton","taskToEditId","editingTaskDesc","taskCompletedStatus","completed","changeAddTaskButtonState","trueOrFalse","displayAllTasks","map","task","i","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport EditTaskForm from '../EditTaskForm/EditTaskForm'\nimport AddnewTaskButton from '../AddNewTaskButton/AddNewTaskButton'\n\n\n\n\nclass Tasks extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: props.user,\n\t\t\ttasks: [],\n\t\t\taddNewTaskButton: true,\n\t\t\teditTaskPage: false,\n\t\t\ttaskToEditId: '',\n\t\t\teditingTaskDesc: '',\n\t\t\ttoggleTaskComplete: false,\n\t\t\ttaskCompletedStatus: false\n\t\t}\t\n\t}\n\n\tgetUserTasks = () => {\n\t\tconst user = this.state.user\n\t\tfetch('https://blech-task-manager.herokuapp.com/tasks', {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(jsonResponse => {\n\t\t\tconsole.log(jsonResponse)\n\t\t\tif(jsonResponse.length > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttasks: jsonResponse\n\t\t\t\t})\n\t\t\t}\n\t\t})\t\t\n\t}\n\n\n\n\teditTaskPageOnOff = (editTaskPageOn, _id, description, toggleTaskComplete) => {\n\t\treturn(\n\t\t(editTaskPageOn)\n\t\t?\n\t\tthis.setState({\n\t\t\teditTaskPage: true,\n\t\t\taddNewTaskButton: true,\n\t\t\ttaskToEditId: _id,\n\t\t\teditingTaskDesc: description,\n\t\t\ttoggleTaskComplete: toggleTaskComplete,\n\t\t\ttaskCompletedStatus: completed\n\t\t})\n\t\t:\n\t\tthis.setState({\n\t\t\teditTaskPage: false\n\t\t})\n\t\t)\n\t}\n\n\tchangeAddTaskButtonState = (trueOrFalse) => {\n\t\t(trueOrFalse) ?\n\t\tthis.setState({addNewTaskButton: true})\n\t\t:\n\t\tthis.setState({addNewTaskButton: false})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUserTasks()\n\t}\n\n\n\tdisplayAllTasks = () => {\n\t\tconst {tasks} = this.state \n\t\treturn (\t\n\t\t\t<div>\n\t\t\t\t<h1>Tasks</h1>\n\t  \t\t\t{\n\t  \t\t\t\ttasks.map((task, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Task \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t_id={tasks[i]._id} \n\t\t\t\t\t\t\tdescription={tasks[i].description} \n\t\t\t\t\t\t\tcompleted={tasks[i].completed}\n\t\t\t\t\t\t\teditTaskPageOnOff = {this.editTaskPageOnOff}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\n\t  \t\t\t}\t\t  \t\t\t\n\t  \t\t</div>\n\t\t)\n\n\t}\n\n\trender() {\n\t\tconst { user, taskToEditId, editTaskPage, editingTaskDesc, toggleTaskComplete } = this.state\n\t\tconsole.log('edit task page not: ', !editTaskPage)\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<AddnewTaskButton \n\t\t\t\taddNewTaskButton={this.state.addNewTaskButton}\n\t\t\t\tchangeAddTaskButtonState = {this.changeAddTaskButtonState}\n\t\t\t\tuser = {user}\n\t\t\t\tgetUserTasks= {this.getUserTasks}\n\t\t\t\t/>\n\t\t\t\t{(editTaskPage)\n\t\t\t\t\t?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<EditTaskForm \n\t\t\t\t\t\tuser={user} \n\t\t\t\t\t\ttaskToEditId={taskToEditId} \n\t\t\t\t\t\teditingTaskDesc = {editingTaskDesc}\n\t\t\t\t\t\tgetUserTasks = {this.getUserTasks}\n\t\t\t\t\t\ttoggleTaskComplete = {toggleTaskComplete}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\tthis.displayAllTasks()\n\t\t\t\t}\n\t\t\t</div>\t\n\t\t);\n\t}\n\t\t\n}\n\nexport default Tasks;\n\n\n"]},"metadata":{},"sourceType":"module"}