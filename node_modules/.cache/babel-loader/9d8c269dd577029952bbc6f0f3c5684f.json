{"ast":null,"code":"import _classCallCheck from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Task from'../Task/Task';import EditTaskForm from'../EditTaskForm/EditTaskForm';import AddnewTaskButton from'../AddNewTaskButton/AddNewTaskButton';import'./Tasks.css';var Tasks=/*#__PURE__*/function(_React$Component){_inherits(Tasks,_React$Component);var _super=_createSuper(Tasks);function Tasks(props){var _this;_classCallCheck(this,Tasks);_this=_super.call(this,props);_this.getUserTasks=function(){var user=_this.state.user;fetch('https://blech-task-manager.herokuapp.com/tasks',{method:'get',headers:{'content-type':'application/json',Authorization:\"Bearer \".concat(user.token)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(jsonResponse.length>0){_this.setState({tasks:jsonResponse});}});};_this.editTaskPageOnOff=function(editTaskPageOn,_id,description,toggleTaskComplete,completed){return editTaskPageOn?_this.setState({editTaskPage:true,addNewTaskButton:true,taskToEditId:_id,editingTaskDesc:description,toggleTaskComplete:toggleTaskComplete,taskCompletedStatus:completed}):_this.setState({editTaskPage:false});};_this.changeAddTaskButtonState=function(trueOrFalse){trueOrFalse?_this.setState({addNewTaskButton:true}):_this.setState({addNewTaskButton:false});};_this.displayAllTasks=function(){var tasks=_this.state.tasks;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"My Tasks\"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},tasks.map(function(task,i){return/*#__PURE__*/React.createElement(Task,{key:i,_id:tasks[i]._id,description:tasks[i].description,completed:tasks[i].completed,editTaskPageOnOff:_this.editTaskPageOnOff});})));};_this.state={user:props.user,tasks:[],addNewTaskButton:true,editTaskPage:false,taskToEditId:'',editingTaskDesc:'',toggleTaskComplete:false,taskCompletedStatus:false};return _this;}_createClass(Tasks,[{key:\"componentDidMount\",value:function componentDidMount(){this.getUserTasks();}},{key:\"render\",value:function render(){var _this$state=this.state,user=_this$state.user,taskToEditId=_this$state.taskToEditId,editTaskPage=_this$state.editTaskPage,editingTaskDesc=_this$state.editingTaskDesc,toggleTaskComplete=_this$state.toggleTaskComplete,taskCompletedStatus=_this$state.taskCompletedStatus;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddnewTaskButton,{addNewTaskButton:this.state.addNewTaskButton,changeAddTaskButtonState:this.changeAddTaskButtonState,user:user,getUserTasks:this.getUserTasks}),editTaskPage?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(EditTaskForm,{user:user,taskToEditId:taskToEditId,editingTaskDesc:editingTaskDesc,getUserTasks:this.getUserTasks,toggleTaskComplete:toggleTaskComplete,taskCompletedStatus:taskCompletedStatus,editTaskPageOnOff:this.editTaskPageOnOff})):this.displayAllTasks());}}]);return Tasks;}(React.Component);export default Tasks;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js"],"names":["React","Task","EditTaskForm","AddnewTaskButton","Tasks","props","getUserTasks","user","state","fetch","method","headers","Authorization","token","then","response","json","jsonResponse","length","setState","tasks","editTaskPageOnOff","editTaskPageOn","_id","description","toggleTaskComplete","completed","editTaskPage","addNewTaskButton","taskToEditId","editingTaskDesc","taskCompletedStatus","changeAddTaskButtonState","trueOrFalse","displayAllTasks","map","task","i","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport EditTaskForm from '../EditTaskForm/EditTaskForm'\nimport AddnewTaskButton from '../AddNewTaskButton/AddNewTaskButton'\n\nimport './Tasks.css'\n\n\n\n\nclass Tasks extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: props.user,\n\t\t\ttasks: [],\n\t\t\taddNewTaskButton: true,\n\t\t\teditTaskPage: false,\n\t\t\ttaskToEditId: '',\n\t\t\teditingTaskDesc: '',\n\t\t\ttoggleTaskComplete: false,\n\t\t\ttaskCompletedStatus: false\n\t\t}\t\n\t}\n\n\tgetUserTasks = () => {\n\t\tconst user = this.state.user\n\t\tfetch('https://blech-task-manager.herokuapp.com/tasks', {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(jsonResponse => {\n\t\t\tif(jsonResponse.length > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttasks: jsonResponse\n\t\t\t\t})\n\t\t\t}\n\t\t})\t\t\n\t}\n\n\n\n\teditTaskPageOnOff = (editTaskPageOn, _id, description, toggleTaskComplete, completed) => {\n\t\treturn(\n\t\t(editTaskPageOn)\n\t\t?\n\t\tthis.setState({\n\t\t\teditTaskPage: true,\n\t\t\taddNewTaskButton: true,\n\t\t\ttaskToEditId: _id,\n\t\t\teditingTaskDesc: description,\n\t\t\ttoggleTaskComplete: toggleTaskComplete,\n\t\t\ttaskCompletedStatus: completed\n\t\t})\n\t\t:\n\t\tthis.setState({\n\t\t\teditTaskPage: false\n\t\t})\n\t\t)\n\t}\n\n\tchangeAddTaskButtonState = (trueOrFalse) => {\n\t\t(trueOrFalse) ?\n\t\tthis.setState({addNewTaskButton: true})\n\t\t:\n\t\tthis.setState({addNewTaskButton: false})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUserTasks()\n\t}\n\n\n\tdisplayAllTasks = () => {\n\t\tconst {tasks} = this.state \n\t\treturn (\n\n\t\t\t<div>\n\t\t\t\t<h1>My Tasks</h1>\n\t\t\t\t<div className='container'>\n\t\t  \t\t\t{\n\t\t  \t\t\t\ttasks.map((task, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Task \n\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t_id={tasks[i]._id} \n\t\t\t\t\t\t\t\tdescription={tasks[i].description} \n\t\t\t\t\t\t\t\tcompleted={tasks[i].completed}\n\t\t\t\t\t\t\t\teditTaskPageOnOff = {this.editTaskPageOnOff}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t  \t\t\t}\n\t\t  \t\t</div>\t  \t\t\t\n\t  \t\t</div>\n\t\t)\n\n\t}\n\n\trender() {\n\t\tconst { \n\t\t\tuser, \n\t\t\ttaskToEditId, \n\t\t\teditTaskPage, \n\t\t\teditingTaskDesc, \n\t\t\ttoggleTaskComplete,\n\t\t\ttaskCompletedStatus,\n\t\t\t} = this.state\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<AddnewTaskButton \n\t\t\t\taddNewTaskButton={this.state.addNewTaskButton}\n\t\t\t\tchangeAddTaskButtonState = {this.changeAddTaskButtonState}\n\t\t\t\tuser = {user}\n\t\t\t\tgetUserTasks= {this.getUserTasks}\n\t\t\t\t/>\n\t\t\t\t{(editTaskPage)\n\t\t\t\t\t?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<EditTaskForm \n\t\t\t\t\t\tuser={user} \n\t\t\t\t\t\ttaskToEditId={taskToEditId} \n\t\t\t\t\t\teditingTaskDesc = {editingTaskDesc}\n\t\t\t\t\t\tgetUserTasks = {this.getUserTasks}\n\t\t\t\t\t\ttoggleTaskComplete = {toggleTaskComplete}\n\t\t\t\t\t\ttaskCompletedStatus = {taskCompletedStatus}\n\t\t\t\t\t\teditTaskPageOnOff = {this.editTaskPageOnOff}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\tthis.displayAllTasks()\n\t\t\t\t}\n\t\t\t</div>\t\n\t\t);\n\t}\n\t\t\n}\n\nexport default Tasks;\n\n\n"]},"metadata":{},"sourceType":"module"}