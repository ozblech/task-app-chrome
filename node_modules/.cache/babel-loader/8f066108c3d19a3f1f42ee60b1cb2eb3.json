{"ast":null,"code":"import _classCallCheck from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';var speechRecognition=window.speechRecognition||window.webkitSpeechRecognition;var recognition=new speechRecognition();recognition.continous=true;recognition.lang='en-US';recognition.start();var VoiceRecognition=/*#__PURE__*/function(_React$Component){_inherits(VoiceRecognition,_React$Component);var _super=_createSuper(VoiceRecognition);function VoiceRecognition(){var _this;_classCallCheck(this,VoiceRecognition);_this=_super.call(this);_this.toggleListen=function(){_this.setState({listening:!_this.state.listening},_this.handleListen);};_this.handleListen=function(){};_this.voiceCommands=function(){console.log('hi there');//On start\nrecognition.onstart=function(){console.log('Voice is active');};// Do something with result\nrecognition.onresult=function(e){var current=e.rsultIndex;var transcript=e.result[current][0].transcript;console.log(transcript);};};_this.state={count:0,setCount:0,listening:false};return _this;}_createClass(VoiceRecognition,[{key:\"componentDidMount\",value:function componentDidMount(){this.voiceCommands();}},{key:\"render\",value:function render(){this.voiceCommands();console.log('helli');return 0;}}]);return VoiceRecognition;}(React.Component);export default VoiceRecognition;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/VoiceRecognition/VoiceRecognition.js"],"names":["React","speechRecognition","window","webkitSpeechRecognition","recognition","continous","lang","start","VoiceRecognition","toggleListen","setState","listening","state","handleListen","voiceCommands","console","log","onstart","onresult","e","current","rsultIndex","transcript","result","count","setCount","Component"],"mappings":"wlBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,iBAAiB,CAAGC,MAAM,CAACD,iBAAP,EAA4BC,MAAM,CAACC,uBAA7D,CAEA,GAAMC,CAAAA,WAAW,CAAG,GAAIH,CAAAA,iBAAJ,EAApB,CAEAG,WAAW,CAACC,SAAZ,CAAwB,IAAxB,CACAD,WAAW,CAACE,IAAZ,CAAmB,OAAnB,CACAF,WAAW,CAACG,KAAZ,G,GAEMC,CAAAA,gB,gIACL,2BAAc,kDACb,wBADa,MASdC,YATc,CASC,UAAM,CACpB,MAAKC,QAAL,CAAc,CAACC,SAAS,CAAE,CAAC,MAAKC,KAAL,CAAWD,SAAxB,CAAd,CAAkD,MAAKE,YAAvD,EACA,CAXa,OAadA,YAbc,CAaC,UAAM,CAEpB,CAfa,OAsBdC,aAtBc,CAsBE,UAAM,CACrBC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACA;AACAZ,WAAW,CAACa,OAAZ,CAAsB,UAAM,CAC3BF,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,CAFD,CAIA;AACAZ,WAAW,CAACc,QAAZ,CAAuB,SAACC,CAAD,CAAO,CAC7B,GAAIC,CAAAA,OAAO,CAAGD,CAAC,CAACE,UAAhB,CAEA,GAAIC,CAAAA,UAAU,CAAGH,CAAC,CAACI,MAAF,CAASH,OAAT,EAAkB,CAAlB,EAAqBE,UAAtC,CACAP,OAAO,CAACC,GAAR,CAAYM,UAAZ,EACA,CALD,CAMA,CApCa,CAEb,MAAKV,KAAL,CAAa,CACZY,KAAK,CAAE,CADK,CAEZC,QAAQ,CAAE,CAFE,CAGZd,SAAS,CAAE,KAHC,CAAb,CAFa,aAOb,C,0FAUmB,CACnB,KAAKG,aAAL,GACA,C,uCAmBQ,CACR,KAAKA,aAAL,GACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EACA,MAAO,EAAP,CACA,C,8BA3C6BhB,KAAK,CAAC0B,S,EA+CrC,cAAelB,CAAAA,gBAAf","sourcesContent":["import React from 'react'\n\nconst speechRecognition = window.speechRecognition || window.webkitSpeechRecognition;\n\nconst recognition = new speechRecognition();\n\nrecognition.continous = true\nrecognition.lang = 'en-US'\nrecognition.start()\n\nclass VoiceRecognition extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcount: 0,\n\t\t\tsetCount: 0,\n\t\t\tlistening: false\n\t\t}\t\n\t}\n\t\n\ttoggleListen = () => {\n\t\tthis.setState({listening: !this.state.listening}, this.handleListen)\n\t}\n\n\thandleListen = () => {\n\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.voiceCommands();\n\t}\n\n\n\tvoiceCommands = () => {\n\t\tconsole.log('hi there')\n\t\t//On start\n\t\trecognition.onstart = () => {\n\t\t\tconsole.log('Voice is active')\n\t\t}\n\n\t\t// Do something with result\n\t\trecognition.onresult = (e) => {\n\t\t\tlet current = e.rsultIndex\n\n\t\t\tlet transcript = e.result[current][0].transcript\n\t\t\tconsole.log(transcript)\n\t\t}\n\t}\n\n\trender() {\n\t\tthis.voiceCommands();\n\t\tconsole.log('helli')\n\t\treturn 0\n\t}\n}\n\n\nexport default VoiceRecognition;\n\n\n\t"]},"metadata":{},"sourceType":"module"}