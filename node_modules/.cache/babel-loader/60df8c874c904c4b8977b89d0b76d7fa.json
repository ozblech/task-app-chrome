{"ast":null,"code":"import _classCallCheck from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/oz/Desktop/git/task-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import VoiceRecognition from'../VoiceRecognition/VoiceRecognition';var EditTaskForm=/*#__PURE__*/function(_React$Component){_inherits(EditTaskForm,_React$Component);var _super=_createSuper(EditTaskForm);function EditTaskForm(props){var _this;_classCallCheck(this,EditTaskForm);_this=_super.call(this,props);_this.onDescriptionChange=function(event){_this.setState({newDescription:event.target.value});};_this.onSubmitEdit=function(){var _this$state=_this.state,user=_this$state.user,newDescription=_this$state.newDescription,taskToEditId=_this$state.taskToEditId,toggleTaskComplete=_this$state.toggleTaskComplete,taskCompletedStatus=_this$state.taskCompletedStatus;var patchBody=toggleTaskComplete?{completed:!taskCompletedStatus}:{description:newDescription};fetch(\"https://blech-task-manager.herokuapp.com/tasks/\".concat(taskToEditId),{method:'PATCH',headers:{'content-type':'application/json; charset=UTF-8',Authorization:\"Bearer \".concat(user.token)},body:JSON.stringify(patchBody)}).then(function(response){return response.json();}).then(function(jsonData){if(jsonData.description){_this.props.getUserTasks();_this.taskEditFormOff(false);}});};_this.onSubmitDelete=function(){var _this$state2=_this.state,user=_this$state2.user,taskToEditId=_this$state2.taskToEditId;fetch(\"https://blech-task-manager.herokuapp.com/tasks/\".concat(taskToEditId),{method:'DELETE',headers:{'content-type':'application/json; charset=UTF-8',Authorization:\"Bearer \".concat(user.token)}}).then(function(response){return response.json();}).then(function(jsonData){if(jsonData.description){_this.props.getUserTasks();_this.taskEditFormOff(false);}});};_this.taskEditFormOff=function(){_this.props.editTaskPageOnOff(false);};_this.state={user:_this.props.user,editingTaskDesc:_this.props.editingTaskDesc,taskToEditId:_this.props.taskToEditId,getUserTasks:_this.props.getUserTasks,toggleTaskComplete:_this.props.toggleTaskComplete,taskCompletedStatus:_this.props.taskCompletedStatus,editTaskPageOnOff:_this.props.editTaskPageOnOff,newDescription:''};return _this;}_createClass(EditTaskForm,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"pa4 black-80 flex justify-center center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"measure \"},this.props.toggleTaskComplete?/*#__PURE__*/React.createElement(\"h3\",null,\"Toggle complete?\"):/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{form:\"description\",className:\"f6 b db mb2\"},\"Add Task Description\"),/*#__PURE__*/React.createElement(\"input\",{id:\"description\",className:\"input-reset ba b--black-20 pa2 mb2 db w-100\",type:\"text\",\"aria-describedby\":\"description-desc\",placeholder:this.state.editingTaskDesc,onChange:this.onDescriptionChange}))),/*#__PURE__*/React.createElement(\"button\",{className:\"ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy\",type:\"submitEditTask\",id:\"submitEditTask\",onClick:this.onSubmitEdit},\"Update\"),/*#__PURE__*/React.createElement(\"button\",{className:\"ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy\",type:\"cancelEditTask\",id:\"cancelEditTask\",onClick:this.taskEditFormOff},\"Cancel\"),/*#__PURE__*/React.createElement(\"button\",{className:\"ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy\",type:\"delete\",onClick:this.onSubmitDelete},\"Delete\"),/*#__PURE__*/React.createElement(VoiceRecognition,{updateDescriptionInput:function updateDescriptionInput(d){return _this2.setState({newDescription:d});}})));}}]);return EditTaskForm;}(React.Component);export default EditTaskForm;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/EditTaskForm/EditTaskForm.js"],"names":["React","VoiceRecognition","EditTaskForm","props","onDescriptionChange","event","setState","newDescription","target","value","onSubmitEdit","state","user","taskToEditId","toggleTaskComplete","taskCompletedStatus","patchBody","completed","description","fetch","method","headers","Authorization","token","body","JSON","stringify","then","response","json","jsonData","getUserTasks","taskEditFormOff","onSubmitDelete","editTaskPageOnOff","editingTaskDesc","d","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport VoiceRecognition from '../VoiceRecognition/VoiceRecognition'\n\n\nclass EditTaskForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: this.props.user,\n\t\t\teditingTaskDesc: this.props.editingTaskDesc,\n\t\t\ttaskToEditId: this.props.taskToEditId,\n\t\t\tgetUserTasks: this.props.getUserTasks,\n\t\t\ttoggleTaskComplete: this.props.toggleTaskComplete,\n\t\t\ttaskCompletedStatus: this.props.taskCompletedStatus,\n\t\t\teditTaskPageOnOff: this.props.editTaskPageOnOff,\n\t\t\tnewDescription: ''\n\n\t\t}\n\t}\n\n\tonDescriptionChange = (event) => {\n\t\tthis.setState({newDescription: event.target.value})\n\t}\n\n\n\tonSubmitEdit = () => {\n\t\tconst { user, newDescription, taskToEditId, toggleTaskComplete, taskCompletedStatus } = this.state\n\t\tconst patchBody = (toggleTaskComplete) ?\n\t\t\t({\n\t\t\t\tcompleted : !taskCompletedStatus\n\t\t\t})\n\t\t\t:\n\t\t\t({\n\t\t\t\tdescription: newDescription\n\t\t\t})\n\n\t\tfetch(`https://blech-task-manager.herokuapp.com/tasks/${taskToEditId}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json; charset=UTF-8',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t},\n\n\t\t\tbody: JSON.stringify(patchBody)\n\t\t})\n\t\t.then(response=> response.json())\n\t\t.then(jsonData=> {\n\t\t\tif (jsonData.description) {\n\t\t\t\tthis.props.getUserTasks()\n\t\t\t\tthis.taskEditFormOff(false)\n\t\t\t}\n\t\t})\n\t}\n\n\tonSubmitDelete = () => {\n\t\tconst { user, taskToEditId } = this.state\n\n\t\tfetch(`https://blech-task-manager.herokuapp.com/tasks/${taskToEditId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json; charset=UTF-8',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t},\n\t\t})\n\t\t.then(response=> response.json())\n\t\t.then(jsonData=> {\n\t\t\tif (jsonData.description) {\n\t\t\t\tthis.props.getUserTasks()\n\t\t\t\tthis.taskEditFormOff(false)\n\t\t\t}\n\t\t})\n\t}\n\n\ttaskEditFormOff = () => {\n\t\tthis.props.editTaskPageOnOff(false)\n\t}\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"pa4 black-80 flex justify-center center\">\n\t\t\t  <div className=\"measure \">\n\t\t\t  \t{\n\t\t\t  \t(this.props.toggleTaskComplete)\n\t\t\t  \t?\n\t\t\t  \t\t<h3>Toggle complete?</h3>\n\t\t\t\t:\n\t\t\t\t<div className='center'>\n\t\t\t\t\t<div>\n\t\t\t\t    <label form=\"description\" className=\"f6 b db mb2\">Add Task Description</label>\n\t\t\t\t    <input \n\t\t\t\t    id=\"description\" \n\t\t\t\t    className=\"input-reset ba b--black-20 pa2 mb2 db w-100\" \n\t\t\t\t    type=\"text\" \n\t\t\t\t    aria-describedby=\"description-desc\"\n\t\t\t\t    placeholder = {this.state.editingTaskDesc}\n\t\t\t\t    onChange={this.onDescriptionChange}\n\t\t\t\t    />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t    <button\n\t\t\t    className='ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy'\n\t\t\t    type='submitEditTask'\n\t\t\t    id='submitEditTask'\n\t\t\t    onClick={this.onSubmitEdit}\n\t\t\t    >Update</button>\n\t\t\t    <button\n\t\t\t    className='ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy'\n\t\t\t    type='cancelEditTask'\n\t\t\t    id='cancelEditTask'\n\t\t\t    onClick={this.taskEditFormOff}\n\t\t\t    >Cancel</button>\n\t\t\t    <button\n\t\t\t    className='ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy'\n\t\t\t    type='delete'\n\t\t\t    onClick={this.onSubmitDelete}\n\t\t\t    >Delete</button>\n\t\t\t    <VoiceRecognition updateDescriptionInput={(d) => this.setState({newDescription: d})}/>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n\t} \n\n}\n\nexport default EditTaskForm;"]},"metadata":{},"sourceType":"module"}