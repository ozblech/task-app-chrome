{"ast":null,"code":"var _jsxFileName = \"/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js\";\nimport React from 'react';\nimport Task from '../Task/Task';\nimport AddTaskForm from '../AddTaskForm/AddTaskForm';\nimport addImg from './Add.png';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserTasks = () => {\n      const user = this.state.user;\n      fetch('https://blech-task-manager.herokuapp.com/tasks', {\n        method: 'get',\n        headers: {\n          'content-type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => response.json()).then(jsonResponse => {\n        console.log(jsonResponse);\n\n        if (jsonResponse.length > 0) {\n          this.setState({\n            tasks: jsonResponse\n          });\n        }\n      });\n    };\n\n    this.changeAddTaskButtonState = trueOrFalse => {\n      trueOrFalse ? this.setState({\n        addNewTaskButton: true\n      }) : this.setState({\n        addNewTaskButton: false\n      });\n    };\n\n    this.editTask = _id => {\n      console.log('task id is: ', _id);\n      this.setState({\n        taskToEdit: _id,\n        editTaskPage: true\n      });\n    };\n\n    this.displayAddTaskButton = () => {\n      const {\n        tasks,\n        addNewTaskButton\n      } = this.state;\n      return addNewTaskButton ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"link grow pointer\",\n        onClick: () => this.changeAddTaskButtonState(false),\n        alt: \"\",\n        src: addImg,\n        width: \"150px\",\n        height: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(AddTaskForm, {\n        changeAddTaskButtonState: this.changeAddTaskButtonState,\n        getUserTasks: this.getUserTasks,\n        user: this.state.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.displatAllTasks = () => {\n      const {\n        tasks,\n        addNewTaskButton\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }\n      }, \"Tasks\"), tasks.map((task, i) => {\n        return /*#__PURE__*/React.createElement(Task, {\n          key: i,\n          _id: tasks[i]._id,\n          description: tasks[i].description,\n          completed: tasks[i].completed,\n          editTask: this.editTask,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 8\n          }\n        });\n      }));\n    };\n\n    this.state = {\n      user: props.user,\n      tasks: [],\n      addNewTaskButton: true,\n      editTaskPage: false,\n      taskToEdit: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getUserTasks();\n  }\n\n  render() {\n    const {\n      tasks,\n      addNewTaskButton\n    } = this.state;\n    console.log('render ', addNewTaskButton);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 4\n      }\n    }, this.displayAddTaskButton(), this.displatAllTasks());\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/Tasks/Tasks.js"],"names":["React","Task","AddTaskForm","addImg","Tasks","Component","constructor","props","getUserTasks","user","state","fetch","method","headers","Authorization","token","then","response","json","jsonResponse","console","log","length","setState","tasks","changeAddTaskButtonState","trueOrFalse","addNewTaskButton","editTask","_id","taskToEdit","editTaskPage","displayAddTaskButton","displatAllTasks","map","task","i","description","completed","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Task from '../Task/Task'\nimport AddTaskForm from '../AddTaskForm/AddTaskForm'\n\nimport addImg from './Add.png'\n\n\nclass Tasks extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: props.user,\n\t\t\ttasks: [],\n\t\t\taddNewTaskButton: true,\n\t\t\teditTaskPage: false,\n\t\t\ttaskToEdit: ''\n\t\t}\t\n\t}\n\n\tgetUserTasks= () => {\n\t\tconst user = this.state.user\n\t\tfetch('https://blech-task-manager.herokuapp.com/tasks', {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(jsonResponse => {\n\t\t\tconsole.log(jsonResponse)\n\t\t\tif(jsonResponse.length > 0) {\n\t\t\t\tthis.setState({tasks: jsonResponse})\n\t\t\t}\n\t\t})\t\n\t\t\n\t}\n\n\tchangeAddTaskButtonState = (trueOrFalse) => {\n\t\t(trueOrFalse) ?\n\t\tthis.setState({addNewTaskButton: true})\n\t\t:\n\t\tthis.setState({addNewTaskButton: false})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUserTasks()\n\t}\n\n\teditTask = (_id) => {\n\t\tconsole.log('task id is: ',_id)\n\t\tthis.setState({\n\t\t\ttaskToEdit: _id,\n\t\t\teditTaskPage: true\n\t\t})\n\t}\n\n\tdisplayAddTaskButton = () => {\n\t\tconst { tasks, addNewTaskButton } = this.state\n\t\treturn (\n\t\t\t\t(addNewTaskButton)\n\t\t\t\t\t?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img \n\t\t\t\t\t\tclassName='link grow pointer' \n\t\t\t\t\t\tonClick={() => this.changeAddTaskButtonState(false)}\n\t\t\t\t\t\talt='' src = {addImg} width='150px' height='auto'/>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<AddTaskForm \n\t\t\t\t\t\tchangeAddTaskButtonState = {this.changeAddTaskButtonState}\n\t\t\t\t\t\tgetUserTasks = {this.getUserTasks}\n\t\t\t\t\t\tuser = {this.state.user}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t)\n\t}\n\n\tdisplatAllTasks = () => {\n\t\tconst { tasks, addNewTaskButton } = this.state\n\t\treturn (\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<h1>Tasks</h1>\n\t  \t\t\t{\n\t  \t\t\t\ttasks.map((task, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Task \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t_id={tasks[i]._id} \n\t\t\t\t\t\t\tdescription={tasks[i].description} \n\t\t\t\t\t\t\tcompleted={tasks[i].completed}\n\t\t\t\t\t\t\teditTask = {this.editTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\n\t  \t\t\t}\t\t  \t\t\t\n\t  \t\t</div>\n\t\t)\n\n\t}\n\n\trender() {\n\t\tconst { tasks, addNewTaskButton } = this.state\n\t\tconsole.log('render ' ,addNewTaskButton)\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.displayAddTaskButton()\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tthis.displatAllTasks()\n\n\t\t\t\t}\n\t\t  \t</div>\n\t\t)\n\t}\t\n\t\n}\n\nexport default Tasks;\n\n\n"]},"metadata":{},"sourceType":"module"}