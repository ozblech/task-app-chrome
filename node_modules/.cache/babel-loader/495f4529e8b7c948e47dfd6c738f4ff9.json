{"ast":null,"code":"var _jsxFileName = \"/home/oz/Desktop/git/task-app-front/src/components/AddTaskForm/AddTaskForm.js\";\nimport React, { useState, useEffect } from 'react';\nconst speechRecognition = window.speechRecognition || window.webkitSpeechRecognition;\nconst recognition = speechRecognition();\nrecognition.start();\n\nclass AddTaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDescriptionChange = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.onSubmitAdd = () => {\n      const {\n        user,\n        description,\n        completed\n      } = this.state;\n      fetch('https://blech-task-manager.herokuapp.com/tasks', {\n        method: 'post',\n        headers: {\n          'content-type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          description: description,\n          completed: completed\n        })\n      }).then(response => response.json()).then(jsonData => {\n        console.log('add task: ', jsonData);\n\n        if (jsonData.description) {\n          this.props.getUserTasks();\n          this.props.changeAddTaskButtonState(true);\n        }\n      });\n    };\n\n    this.state = {\n      user: this.props.user,\n      description: '',\n      completed: false,\n      count: 0,\n      setCount: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pa4 black-80 flex justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"measure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      form: \"description\",\n      className: \"f6 b db mb2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }\n    }, \"Add Task Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"description\",\n      className: \"input-reset ba b--black-20 pa2 mb2 db w-100\",\n      type: \"text\",\n      \"aria-describedby\": \"description-desc\",\n      onChange: this.onDescriptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy\",\n      type: \"submit\",\n      onClick: this.onSubmitAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy\",\n      type: \"cancel\",\n      onClick: () => this.props.changeAddTaskButtonState(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default AddTaskForm;","map":{"version":3,"sources":["/home/oz/Desktop/git/task-app-front/src/components/AddTaskForm/AddTaskForm.js"],"names":["React","useState","useEffect","speechRecognition","window","webkitSpeechRecognition","recognition","start","AddTaskForm","Component","constructor","props","onDescriptionChange","event","setState","description","target","value","onSubmitAdd","user","completed","state","fetch","method","headers","Authorization","token","body","JSON","stringify","then","response","json","jsonData","console","log","getUserTasks","changeAddTaskButtonState","count","setCount","render"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react'\n\nconst speechRecognition = window.speechRecognition || window.webkitSpeechRecognition;\n\nconst recognition = speechRecognition();\n\nrecognition.start()\n\nclass AddTaskForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: this.props.user,\n\t\t\tdescription: '',\n\t\t\tcompleted: false,\n\t\t\tcount: 0,\n\t\t\tsetCount: 0\n\n\t\t}\n\t}\n\n\tonDescriptionChange = (event) => {\n\t\tthis.setState({description: event.target.value})\n\t}\n\n\n\tonSubmitAdd = () => {\n\t\tconst { user, description, completed } = this.state\n\t\tfetch('https://blech-task-manager.herokuapp.com/tasks', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${user.token}`\n\t\t\t},\n\n\t\t\tbody: JSON.stringify({\n\t\t\t\tdescription: description,\n\t\t\t\tcompleted: completed\n\t\t\t})\n\t\t})\n\t\t.then(response=> response.json())\n\t\t.then(jsonData=> {\n\t\t\tconsole.log('add task: ', jsonData)\n\t\t\tif (jsonData.description) {\n\t\t\t\tthis.props.getUserTasks()\n\t\t\t\tthis.props.changeAddTaskButtonState(true)\n\t\t\t}\n\t\t})\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pa4 black-80 flex justify-center\">\n\t\t\t  <div className=\"measure\">\n\t\t\t    <label form=\"description\" className=\"f6 b db mb2\">Add Task Description</label>\n\t\t\t    <input \n\t\t\t    id=\"description\" \n\t\t\t    className=\"input-reset ba b--black-20 pa2 mb2 db w-100\" \n\t\t\t    type=\"text\" \n\t\t\t    aria-describedby=\"description-desc\"\n\t\t\t    onChange={this.onDescriptionChange}\n\t\t\t    />\n\t\t\t    <button\n\t\t\t    className='ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy'\n\t\t\t    type='submit'\n\t\t\t    onClick={this.onSubmitAdd}\n\t\t\t    >Add</button>\n\t\t\t    <button\n\t\t\t    className='ph3 link dim f6 ph3 pv2 mb2 dib white bg-navy'\n\t\t\t    type='cancel'\n\t\t\t    onClick={() => this.props.changeAddTaskButtonState(true)}\n\t\t\t    >Cancel</button>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n\t} \n\n}\n\nexport default AddTaskForm;"]},"metadata":{},"sourceType":"module"}